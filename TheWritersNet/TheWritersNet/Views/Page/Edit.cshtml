@model TheWritersNet.Models.PageModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Page</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HomePage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HomePage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HomePage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<h4>Sections</h4>
<p>
    @Html.ActionLink("Create New", "Create", "Section", new { pageID = Model.PageID }, new { })
</p>
<table class="table">
    <tr>
        <th>
            Title
        </th>
        <th>
            Position
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Sections)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Position)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", "Section", new { pageID = Model.PageID, sectionID = item.SectionID }, new { }) |
                @Html.ActionLink("View", "Display", "Section", new { pageID = Model.PageID, sectionID = item.SectionID }, new { }) |
                @Html.ActionLink("Delete", "Delete", "Section", new { pageID = Model.PageID, sectionID = item.SectionID }, new { })
            </td>
        </tr>
    }

</table>

<div>
    @Html.ActionLink("Back to Website", "EditFromID", "Website", new { websiteID = Model.WebsiteID }, new { })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
