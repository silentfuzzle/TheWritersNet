@model TheWritersNet.Models.UserViewModel

@{
    ViewBag.Title = "Profile";
}

<h2>Profile</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea("Description", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<h4>Tags</h4>
<p>
    @Html.ActionLink("Create New", "Create", "Tag", new { websiteID = -1 }, new { })
</p>
<table class="table">
    <tr>
        <th>
            Tag
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Tags)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Text)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", "Tag", new { tagID = item.TagID, websiteID = -1, text = item.Text }, new { }) |
                @Html.ActionLink("Delete", "Delete", "Tag", new { tagID = item.TagID, websiteID = -1, text = item.Text }, new { })
            </td>
        </tr>
    }

</table>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
